package main

import (
	"bytes"
	"fmt"
	"time"
)

var h = 10
var w = 10

// Yes
// var c = [][]string{
// 	{"s", ".", ".", ".", ".", ".", ".", ".", ".", "."},
// 	{"#", "#", "#", "#", "#", "#", "#", "#", "#", "."},
// 	{"#", ".", ".", ".", ".", ".", ".", ".", "#", "."},
// 	{"#", ".", ".", "#", "#", "#", "#", ".", "#", "."},
// 	{"#", "#", ".", ".", ".", ".", "#", ".", "#", "."},
// 	{"#", "#", "#", "#", "#", ".", "#", ".", "#", "."},
// 	{"g", ".", "#", ".", "#", ".", "#", ".", "#", "."},
// 	{"#", ".", "#", ".", "#", ".", "#", ".", "#", "."},
// 	{"#", ".", "#", ".", "#", ".", "#", ".", "#", "."},
// 	{"#", ".", ".", ".", ".", ".", "#", ".", ".", "."},
// }

// No
var c = [][]string{
	{"s", ".", ".", ".", ".", ".", ".", ".", ".", "."},
	{"#", "#", "#", "#", "#", "#", "#", "#", "#", "."},
	{"#", ".", ".", ".", ".", ".", ".", ".", "#", "."},
	{"#", ".", ".", "#", "#", "#", "#", ".", "#", "."},
	{"#", "#", ".", ".", ".", ".", "#", ".", "#", "."},
	{"#", "#", "#", "#", "#", ".", "#", ".", "#", "."},
	{"g", ".", "#", ".", "#", ".", "#", ".", "#", "."},
	{"#", ".", "#", ".", "#", ".", "#", ".", "#", "."},
	{"#", "#", "#", ".", "#", ".", "#", ".", "#", "."},
	{"#", ".", ".", ".", ".", ".", "#", ".", ".", "."},
}

func pp(x, y int) string {
	var buf bytes.Buffer
	for i := 0; i < h; i++ {
		for j := 0; j < w; j++ {
			if y == i && x == j {
				buf.WriteString("+")
			} else {
				buf.WriteString(c[i][j])
			}
		}
		buf.WriteString("\n")
	}
	return buf.String()
}

func dfs(x, y int) bool {
	time.Sleep(time.Millisecond * 30)
	fmt.Println(pp(x, y))
	if c[y][x] == "g" {
		return true
	}

	if c[y][x] == "#" || c[y][x] == "x" {
		return false
	}

	c[y][x] = "x"
	ans := false

	if x+1 < w {
		ans = ans || dfs(x+1, y)
	}
	if y+1 < h {
		ans = ans || dfs(x, y+1)
	}
	if x-1 >= 0 {
		ans = ans || dfs(x-1, y)
	}
	if y-1 >= 0 {
		ans = ans || dfs(x, y-1)
	}
	return ans
}

func solve() {
	for i := 0; i < h; i++ {
		for j := 0; j < w; j++ {
			if c[i][j] == "s" {
				if dfs(i, j) {
					fmt.Println("Yes")
				} else {
					fmt.Println("No")
				}
			}
		}
	}
}

func main() {
	solve()
}
